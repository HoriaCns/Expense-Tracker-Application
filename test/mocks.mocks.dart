// Mocks generated by Mockito 5.4.6 from annotations
// in expense_tracker/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:appwrite/appwrite.dart' as _i2;
import 'package:appwrite/models.dart' as _i3;
import 'package:expense_tracker/api/appwrite_client.dart' as _i5;
import 'package:expense_tracker/models/budget.dart' as _i4;
import 'package:expense_tracker/models/expense.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAccount_1 extends _i1.SmartFake implements _i2.Account {
  _FakeAccount_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabases_2 extends _i1.SmartFake implements _i2.Databases {
  _FakeDatabases_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSession_3 extends _i1.SmartFake implements _i3.Session {
  _FakeSession_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_4 extends _i1.SmartFake implements _i3.User {
  _FakeUser_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBudget_5 extends _i1.SmartFake implements _i4.Budget {
  _FakeBudget_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppwriteClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppwriteClient extends _i1.Mock implements _i5.AppwriteClient {
  MockAppwriteClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i2.Account get account =>
      (super.noSuchMethod(
            Invocation.getter(#account),
            returnValue: _FakeAccount_1(this, Invocation.getter(#account)),
          )
          as _i2.Account);

  @override
  _i2.Databases get databases =>
      (super.noSuchMethod(
            Invocation.getter(#databases),
            returnValue: _FakeDatabases_2(this, Invocation.getter(#databases)),
          )
          as _i2.Databases);

  @override
  String get endpoint =>
      (super.noSuchMethod(
            Invocation.getter(#endpoint),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#endpoint),
            ),
          )
          as String);

  @override
  String get projectId =>
      (super.noSuchMethod(
            Invocation.getter(#projectId),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#projectId),
            ),
          )
          as String);

  @override
  String get databaseId =>
      (super.noSuchMethod(
            Invocation.getter(#databaseId),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#databaseId),
            ),
          )
          as String);

  @override
  String get collectionId =>
      (super.noSuchMethod(
            Invocation.getter(#collectionId),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#collectionId),
            ),
          )
          as String);

  @override
  String get budgetCollectionId =>
      (super.noSuchMethod(
            Invocation.getter(#budgetCollectionId),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#budgetCollectionId),
            ),
          )
          as String);

  @override
  set client(_i2.Client? _client) => super.noSuchMethod(
    Invocation.setter(#client, _client),
    returnValueForMissingStub: null,
  );

  @override
  set account(_i2.Account? _account) => super.noSuchMethod(
    Invocation.setter(#account, _account),
    returnValueForMissingStub: null,
  );

  @override
  set databases(_i2.Databases? _databases) => super.noSuchMethod(
    Invocation.setter(#databases, _databases),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i3.User?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i7.Future<_i3.User?>.value(),
          )
          as _i7.Future<_i3.User?>);

  @override
  _i7.Future<_i3.Session> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i3.Session>.value(
              _FakeSession_3(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i3.Session>);

  @override
  _i7.Future<_i3.User> signUp({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i3.User>.value(
              _FakeUser_4(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i3.User>);

  @override
  _i7.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<List<_i8.Expense>> getExpenses(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getExpenses, [userId]),
            returnValue: _i7.Future<List<_i8.Expense>>.value(<_i8.Expense>[]),
          )
          as _i7.Future<List<_i8.Expense>>);

  @override
  _i7.Future<void> addExpense(_i8.Expense? expense, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#addExpense, [expense, userId]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateExpense(_i8.Expense? expense) =>
      (super.noSuchMethod(
            Invocation.method(#updateExpense, [expense]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> deleteExpense(String? documentId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpense, [documentId]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i4.Budget> getBudgetForCurrentMonth(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getBudgetForCurrentMonth, [userId]),
            returnValue: _i7.Future<_i4.Budget>.value(
              _FakeBudget_5(
                this,
                Invocation.method(#getBudgetForCurrentMonth, [userId]),
              ),
            ),
          )
          as _i7.Future<_i4.Budget>);

  @override
  _i7.Future<void> createBudget(String? userId, double? amount) =>
      (super.noSuchMethod(
            Invocation.method(#createBudget, [userId, amount]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateBudget(String? documentId, double? amount) =>
      (super.noSuchMethod(
            Invocation.method(#updateBudget, [documentId, amount]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}
